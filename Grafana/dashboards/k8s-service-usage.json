{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "Azure Monitor Container Insights",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "gnetId": 12817,
  "graphTooltip": 0,
  "id": 25,
  "links": [
    {
      "asDropdown": false,
      "icon": "external link",
      "includeVars": false,
      "keepTime": true,
      "tags": [],
      "targetBlank": true,
      "title": "Prod-Europe",
      "tooltip": "",
      "type": "link",
      "url": "/d/Agj7Edtnz/aks-service-usage-explorer?orgId=1&var-Subscription=d4746c7a-19cb-47ac-82b5-069b17cb99de&var-Workspace=%2Fsubscriptions%2Fd4746c7a-19cb-47ac-82b5-069b17cb99de%2Fresourcegroups%2Fprod-platformshared%2Fproviders%2Fmicrosoft.operationalinsights%2Fworkspaces%2Fprodplatformshared-weu-log&var-ResourceGroups=prod-platformapps-weu&var-AKS=prod-platformapps-weu-aks&var-Namespace=twin-axa-prod"
    },
    {
      "asDropdown": false,
      "icon": "external link",
      "includeVars": false,
      "keepTime": true,
      "tags": [],
      "targetBlank": true,
      "title": "Prod-US",
      "tooltip": "",
      "type": "link",
      "url": "/d/Agj7Edtnz/aks-service-usage-explorer?orgId=1&var-Subscription=d4746c7a-19cb-47ac-82b5-069b17cb99de&var-Workspace=%2Fsubscriptions%2Fd4746c7a-19cb-47ac-82b5-069b17cb99de%2Fresourcegroups%2Fprod-platformshared%2Fproviders%2Fmicrosoft.operationalinsights%2Fworkspaces%2Fprodplatformshared-eu2-log&var-ResourceGroups=prod-platformapps-eu2&var-AKS=prod-platformapps-eu2-aks&var-Namespace=twin-msft-prod"
    },
    {
      "asDropdown": false,
      "icon": "external link",
      "includeVars": false,
      "keepTime": true,
      "tags": [],
      "targetBlank": true,
      "title": "Prod-AUS",
      "tooltip": "",
      "type": "link",
      "url": "/d/Agj7Edtnz/aks-service-usage-explorer?orgId=1&var-Subscription=d4746c7a-19cb-47ac-82b5-069b17cb99de&var-Workspace=%2Fsubscriptions%2Fd4746c7a-19cb-47ac-82b5-069b17cb99de%2Fresourcegroups%2Fprod-platformshared%2Fproviders%2Fmicrosoft.operationalinsights%2Fworkspaces%2Fprodplatformshared-aue-log&var-ResourceGroups=prod-platformapps-aue&var-AKS=prod-platformapps-aue-aks&var-Namespace=twin-ncr-prod"
    },
    {
      "asDropdown": false,
      "icon": "external link",
      "includeVars": false,
      "keepTime": true,
      "tags": [],
      "targetBlank": true,
      "title": "NonProd",
      "tooltip": "",
      "type": "link",
      "url": "/d/Agj7Edtnz/aks-service-usage-explorer?orgId=1&var-Subscription=178b67d7-b6fd-46db-b4a3-b57f8a6b045f&var-Workspace=%2Fsubscriptions%2F178b67d7-b6fd-46db-b4a3-b57f8a6b045f%2Fresourcegroups%2Fnonprod-platformshared%2Fproviders%2Fmicrosoft.operationalinsights%2Fworkspaces%2Fnonprodplatformshared-aue-log&var-ResourceGroups=nonprod-platformapps&var-AKS=nonprod-platformapps-aks&var-Namespace=twin-shared-nonprod-australiaeast"
    },
    {
      "asDropdown": false,
      "icon": "external link",
      "includeVars": false,
      "keepTime": true,
      "tags": [],
      "targetBlank": true,
      "title": "DevServices",
      "tooltip": "",
      "type": "link",
      "url": "/d/Agj7Edtnz/aks-service-usage-explorer?orgId=1&var-Subscription=178b67d7-b6fd-46db-b4a3-b57f8a6b045f&var-Workspace=%2Fsubscriptions%2F178b67d7-b6fd-46db-b4a3-b57f8a6b045f%2Fresourcegroups%2Fnonprod-platformshared%2Fproviders%2Fmicrosoft.operationalinsights%2Fworkspaces%2Fnonprodplatformshared-aue-log&var-ResourceGroups=internal-devservices&var-AKS=internal-devservices-aks&var-Namespace=grafana&from=1650580931342&to=1650584531342"
    }
  ],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "PB92CA166444B34F5"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 65,
      "panels": [],
      "targets": [
        {
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "PB92CA166444B34F5"
          },
          "refId": "A"
        }
      ],
      "title": "Usage $AKS",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "PB92CA166444B34F5"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "max": 110,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "blue",
                "value": 30
              },
              {
                "color": "green",
                "value": 50
              },
              {
                "color": "purple",
                "value": 70
              },
              {
                "color": "#EAB839",
                "value": 90
              },
              {
                "color": "red",
                "value": 100
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 12,
        "x": 0,
        "y": 1
      },
      "id": 59,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "text": {}
      },
      "pluginVersion": "9.5.1",
      "targets": [
        {
          "appInsights": {
            "dimension": [
              "none"
            ],
            "metricName": "select",
            "rawQuery": false,
            "rawQueryString": "",
            "timeColumn": "timestamp",
            "timeGrain": "auto",
            "valueColumn": ""
          },
          "azureLogAnalytics": {
            "query": "KubePodInventory\n| where TimeGenerated > ago(2m)\n| where ClusterName == \"$AKS\"\n| where Namespace == \"$Namespace\"\n| summarize arg_max(TimeGenerated, *) by ContainerName\n| project Name, ContainerName, ServiceName\n| join kind = inner (\n    Perf\n    | where TimeGenerated > ago(2m)\n    | where ObjectName == 'K8SContainer'\n    | where CounterName == 'cpuRequestNanoCores'\n    | where InstanceName contains '$AKS'\n    | extend ContainerNameParts = split(InstanceName, '/')\n    | extend ContainerNamePartCount = array_length(ContainerNameParts)            \n    | extend PodUIDIndex = ContainerNamePartCount - 2, ContainerNameIndex = ContainerNamePartCount - 1 \n    | extend ContainerName = strcat(ContainerNameParts[PodUIDIndex], '/', ContainerNameParts[ContainerNameIndex])\n    | summarize arg_max(TimeGenerated, *) by ContainerName\n    | project ContainerName, CpuRequest=CounterValue\n    | join kind = inner (\n        Perf\n        | where TimeGenerated > ago(2m)\n        | where ObjectName == 'K8SContainer'\n        | where CounterName == 'cpuUsageNanoCores'\n        | where InstanceName contains '$AKS'\n        | extend ContainerNameParts = split(InstanceName, '/')\n        | extend ContainerNamePartCount = array_length(ContainerNameParts)            \n        | extend PodUIDIndex = ContainerNamePartCount - 2, ContainerNameIndex = ContainerNamePartCount - 1 \n        | extend ContainerName = strcat(ContainerNameParts[PodUIDIndex], '/', ContainerNameParts[ContainerNameIndex])\n        | summarize arg_max(TimeGenerated, *) by ContainerName\n        | project TimeGenerated, ContainerName, CpuUsage=CounterValue\n    ) on ContainerName\n) on ContainerName\n| summarize PercentUsed=avg(CpuUsage=(CpuUsage / 1000000)/(CpuRequest / 1000000)) by ServiceName\n| order by PercentUsed desc",
            "resource": "$Workspace",
            "resultFormat": "table"
          },
          "azureMonitor": {
            "aggOptions": [],
            "dimensionFilter": "*",
            "metricDefinition": "select",
            "metricName": "select",
            "metricNamespace": "select",
            "resourceGroup": "select",
            "resourceName": "select",
            "timeGrain": "auto",
            "timeGrains": [],
            "top": "10"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "PB92CA166444B34F5"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A",
          "subscription": "7b0bcc15-eef6-4181-b9fe-23bc213ce163"
        }
      ],
      "title": "Percentage Of Requested CPU",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "PB92CA166444B34F5"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "max": 110,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "blue",
                "value": 30
              },
              {
                "color": "green",
                "value": 50
              },
              {
                "color": "purple",
                "value": 70
              },
              {
                "color": "#EAB839",
                "value": 90
              },
              {
                "color": "red",
                "value": 100
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 12,
        "x": 12,
        "y": 1
      },
      "id": 58,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "text": {}
      },
      "pluginVersion": "9.5.1",
      "targets": [
        {
          "appInsights": {
            "dimension": [
              "none"
            ],
            "metricName": "select",
            "rawQuery": false,
            "rawQueryString": "",
            "timeColumn": "timestamp",
            "timeGrain": "auto",
            "valueColumn": ""
          },
          "azureLogAnalytics": {
            "query": "KubePodInventory\n| where TimeGenerated > ago(2m)\n| where ClusterName == \"$AKS\"\n| where Namespace == \"$Namespace\"\n| summarize arg_max(TimeGenerated, *) by ContainerName\n| project Name, ContainerName, ServiceName\n| join kind = inner (\n    Perf\n    | where TimeGenerated > ago(2m)\n    | where ObjectName == 'K8SContainer'\n    | where CounterName == 'cpuLimitNanoCores'\n    | where InstanceName contains '$AKS'\n    | extend ContainerNameParts = split(InstanceName, '/')\n    | extend ContainerNamePartCount = array_length(ContainerNameParts)            \n    | extend PodUIDIndex = ContainerNamePartCount - 2, ContainerNameIndex = ContainerNamePartCount - 1 \n    | extend ContainerName = strcat(ContainerNameParts[PodUIDIndex], '/', ContainerNameParts[ContainerNameIndex])\n    | summarize arg_max(TimeGenerated, *) by ContainerName\n    | project ContainerName, CpuLimit=CounterValue\n    | join kind = inner (\n        Perf\n        | where TimeGenerated > ago(2m)\n        | where ObjectName == 'K8SContainer'\n        | where CounterName == 'cpuUsageNanoCores'\n        | where InstanceName contains '$AKS'\n        | extend ContainerNameParts = split(InstanceName, '/')\n        | extend ContainerNamePartCount = array_length(ContainerNameParts)            \n        | extend PodUIDIndex = ContainerNamePartCount - 2, ContainerNameIndex = ContainerNamePartCount - 1 \n        | extend ContainerName = strcat(ContainerNameParts[PodUIDIndex], '/', ContainerNameParts[ContainerNameIndex])\n        | summarize arg_max(TimeGenerated, *) by ContainerName\n        | project TimeGenerated, ContainerName, CpuUsage=CounterValue\n    ) on ContainerName\n) on ContainerName\n| order by Name asc\n| summarize PercentUsed=avg(CpuUsage=(CpuUsage / 1000000)/(CpuLimit / 1000000)) by ServiceName",
            "resource": "$Workspace",
            "resultFormat": "table"
          },
          "azureMonitor": {
            "aggOptions": [],
            "dimensionFilter": "*",
            "metricDefinition": "select",
            "metricName": "select",
            "metricNamespace": "select",
            "resourceGroup": "select",
            "resourceName": "select",
            "timeGrain": "auto",
            "timeGrains": [],
            "top": "10"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "PB92CA166444B34F5"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A",
          "subscription": "7b0bcc15-eef6-4181-b9fe-23bc213ce163"
        }
      ],
      "title": "Percentage Of CPU Limit ",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "PB92CA166444B34F5"
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 300
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "CpuLimit"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 80
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "CpuUsage"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 85
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "CpuRequest"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 101
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Replicas"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 78
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 7,
        "x": 0,
        "y": 5
      },
      "id": 49,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "9.5.1",
      "targets": [
        {
          "appInsights": {
            "dimension": [
              "none"
            ],
            "metricName": "select",
            "rawQuery": false,
            "rawQueryString": "",
            "timeColumn": "timestamp",
            "timeGrain": "auto",
            "valueColumn": ""
          },
          "azureLogAnalytics": {
            "query": "KubePodInventory\n| where TimeGenerated > ago(2m)\n| where ClusterName == \"$AKS\"\n| where Namespace == \"$Namespace\"\n| summarize arg_max(TimeGenerated, *) by ContainerName\n| project Name, ContainerName, ServiceName\n| join kind = inner (\n    Perf\n    | where TimeGenerated > ago(2m)\n    | where ObjectName == 'K8SContainer'\n    | where CounterName == 'cpuLimitNanoCores'\n    | where InstanceName contains '$AKS'\n    | extend ContainerNameParts = split(InstanceName, '/')\n    | extend ContainerNamePartCount = array_length(ContainerNameParts)            \n    | extend PodUIDIndex = ContainerNamePartCount - 2, ContainerNameIndex = ContainerNamePartCount - 1 \n    | extend ContainerName = strcat(ContainerNameParts[PodUIDIndex], '/', ContainerNameParts[ContainerNameIndex])\n    | summarize arg_max(TimeGenerated, *) by ContainerName\n    | project ContainerName, CpuLimit=CounterValue\n    | join kind = inner (\n        Perf\n        | where TimeGenerated > ago(2m)\n        | where ObjectName == 'K8SContainer'\n        | where CounterName == 'cpuRequestNanoCores'\n        | where InstanceName contains '$AKS'\n        | extend ContainerNameParts = split(InstanceName, '/')\n        | extend ContainerNamePartCount = array_length(ContainerNameParts)            \n        | extend PodUIDIndex = ContainerNamePartCount - 2, ContainerNameIndex = ContainerNamePartCount - 1 \n        | extend ContainerName = strcat(ContainerNameParts[PodUIDIndex], '/', ContainerNameParts[ContainerNameIndex])\n        | summarize arg_max(TimeGenerated, *) by ContainerName\n        | project TimeGenerated, ContainerName, CpuUsage=CounterValue\n    ) on ContainerName\n) on ContainerName\n| order by Name asc\n| summarize Replicas=dcount(Name) by ServiceName, CpuRequest=(CpuUsage / 1000000), CpuLimit=(CpuLimit / 1000000)",
            "resource": "$Workspace",
            "resultFormat": "table"
          },
          "azureMonitor": {
            "aggOptions": [],
            "dimensionFilter": "*",
            "metricDefinition": "select",
            "metricName": "select",
            "metricNamespace": "select",
            "resourceGroup": "select",
            "resourceName": "select",
            "timeGrain": "auto",
            "timeGrains": [],
            "top": "10"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "PB92CA166444B34F5"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A",
          "subscription": "7b0bcc15-eef6-4181-b9fe-23bc213ce163"
        }
      ],
      "title": "Cpu Info (Current)",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "PB92CA166444B34F5"
      },
      "description": "A contagem do AKS é sempre em Milicores.\n\n1vCPU = 1000 milicores",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "always",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 2,
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 17,
        "x": 7,
        "y": 5
      },
      "id": 19,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "8.2.1",
      "targets": [
        {
          "appInsights": {
            "dimension": [
              "none"
            ],
            "metricName": "select",
            "rawQuery": false,
            "rawQueryString": "",
            "timeColumn": "timestamp",
            "timeGrain": "auto",
            "valueColumn": ""
          },
          "azureLogAnalytics": {
            "query": "KubePodInventory\n| where $__timeFilter(TimeGenerated)\n| where ClusterName == \"$AKS\"\n| where Namespace == \"$Namespace\"\n| summarize arg_max(TimeGenerated, *) by ContainerName\n| project Name, ContainerName, ServiceName\n| join kind = inner (\n    Perf\n    | where $__timeFilter(TimeGenerated)\n    | where ObjectName == 'K8SContainer'\n    | where CounterName == 'cpuUsageNanoCores'\n    | where InstanceName contains '$AKS'\n    | extend ContainerNameParts = split(InstanceName, '/')\n    | extend ContainerNamePartCount = array_length(ContainerNameParts)            \n    | extend PodUIDIndex = ContainerNamePartCount - 2, ContainerNameIndex = ContainerNamePartCount - 1 \n    | extend ContainerName = strcat(ContainerNameParts[PodUIDIndex], '/', ContainerNameParts[ContainerNameIndex])\n    | project TimeGenerated, ContainerName, CounterValue\n) on ContainerName\n| summarize MiliCores=avg((CounterValue / 1000000)) by TimeGenerated=bin(TimeGenerated, $__interval), ServiceName\n| order by TimeGenerated asc",
            "resource": "$Workspace",
            "resultFormat": "time_series"
          },
          "azureMonitor": {
            "aggOptions": [],
            "dimensionFilter": "*",
            "metricDefinition": "select",
            "metricName": "select",
            "metricNamespace": "select",
            "resourceGroup": "select",
            "resourceName": "select",
            "timeGrain": "auto",
            "timeGrains": [],
            "top": "10"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "PB92CA166444B34F5"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A",
          "subscription": "7b0bcc15-eef6-4181-b9fe-23bc213ce163"
        }
      ],
      "title": "Avg CPU per Pod",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "PB92CA166444B34F5"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "max": 110,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "blue",
                "value": 30
              },
              {
                "color": "green",
                "value": 50
              },
              {
                "color": "purple",
                "value": 70
              },
              {
                "color": "#EAB839",
                "value": 90
              },
              {
                "color": "red",
                "value": 100
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 12,
        "x": 0,
        "y": 15
      },
      "id": 60,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "text": {}
      },
      "pluginVersion": "9.5.1",
      "targets": [
        {
          "appInsights": {
            "dimension": [
              "none"
            ],
            "metricName": "select",
            "rawQuery": false,
            "rawQueryString": "",
            "timeColumn": "timestamp",
            "timeGrain": "auto",
            "valueColumn": ""
          },
          "azureLogAnalytics": {
            "query": "KubePodInventory\n| where TimeGenerated > ago(2m)\n| where ClusterName == \"$AKS\"\n| where Namespace == \"$Namespace\"\n| summarize arg_max(TimeGenerated, *) by ContainerName\n| project Name, ContainerName, ServiceName\n| join kind = inner (\n    Perf\n    | where TimeGenerated > ago(2m)\n    | where ObjectName == 'K8SContainer'\n    | where CounterName == 'memoryRequestBytes'\n    | where InstanceName contains '$AKS'\n    | extend ContainerNameParts = split(InstanceName, '/')\n    | extend ContainerNamePartCount = array_length(ContainerNameParts)            \n    | extend PodUIDIndex = ContainerNamePartCount - 2, ContainerNameIndex = ContainerNamePartCount - 1 \n    | extend ContainerName = strcat(ContainerNameParts[PodUIDIndex], '/', ContainerNameParts[ContainerNameIndex])\n    | summarize arg_max(TimeGenerated, *) by ContainerName\n    | project ContainerName, MemoryRequest=CounterValue\n    | join kind = inner (\n        Perf\n        | where TimeGenerated > ago(2m)\n        | where ObjectName == 'K8SContainer'\n        | where CounterName == 'memoryWorkingSetBytes'\n        | where InstanceName contains '$AKS'\n        | extend ContainerNameParts = split(InstanceName, '/')\n        | extend ContainerNamePartCount = array_length(ContainerNameParts)            \n        | extend PodUIDIndex = ContainerNamePartCount - 2, ContainerNameIndex = ContainerNamePartCount - 1 \n        | extend ContainerName = strcat(ContainerNameParts[PodUIDIndex], '/', ContainerNameParts[ContainerNameIndex])\n        | summarize arg_max(TimeGenerated, *) by ContainerName\n        | project TimeGenerated, ContainerName, MemoryUsage=CounterValue\n    ) on ContainerName\n) on ContainerName\n| summarize PercentUsed=avg(CpuUsage=MemoryUsage/MemoryRequest) by ServiceName\n| order by PercentUsed desc",
            "resource": "$Workspace",
            "resultFormat": "table"
          },
          "azureMonitor": {
            "aggOptions": [],
            "dimensionFilter": "*",
            "metricDefinition": "select",
            "metricName": "select",
            "metricNamespace": "select",
            "resourceGroup": "select",
            "resourceName": "select",
            "timeGrain": "auto",
            "timeGrains": [],
            "top": "10"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "PB92CA166444B34F5"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A",
          "subscription": "7b0bcc15-eef6-4181-b9fe-23bc213ce163"
        }
      ],
      "title": "Percentage Of Requested Memory",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "PB92CA166444B34F5"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "max": 110,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "blue",
                "value": 30
              },
              {
                "color": "green",
                "value": 50
              },
              {
                "color": "purple",
                "value": 70
              },
              {
                "color": "#EAB839",
                "value": 90
              },
              {
                "color": "red",
                "value": 100
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 12,
        "x": 12,
        "y": 15
      },
      "id": 61,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "text": {}
      },
      "pluginVersion": "9.5.1",
      "targets": [
        {
          "appInsights": {
            "dimension": [
              "none"
            ],
            "metricName": "select",
            "rawQuery": false,
            "rawQueryString": "",
            "timeColumn": "timestamp",
            "timeGrain": "auto",
            "valueColumn": ""
          },
          "azureLogAnalytics": {
            "query": "KubePodInventory\n| where TimeGenerated > ago(2m)\n| where ClusterName == \"$AKS\"\n| where Namespace == \"$Namespace\"\n| summarize arg_max(TimeGenerated, *) by ContainerName\n| project Name, ContainerName, ServiceName\n| join kind = inner (\n    Perf\n    | where TimeGenerated > ago(2m)\n    | where ObjectName == 'K8SContainer'\n    | where CounterName == 'memoryLimitBytes'\n    | where InstanceName contains '$AKS'\n    | extend ContainerNameParts = split(InstanceName, '/')\n    | extend ContainerNamePartCount = array_length(ContainerNameParts)            \n    | extend PodUIDIndex = ContainerNamePartCount - 2, ContainerNameIndex = ContainerNamePartCount - 1 \n    | extend ContainerName = strcat(ContainerNameParts[PodUIDIndex], '/', ContainerNameParts[ContainerNameIndex])\n    | summarize arg_max(TimeGenerated, *) by ContainerName\n    | project ContainerName, MemoryLimit=CounterValue\n    | join kind = inner (\n        Perf\n        | where TimeGenerated > ago(2m)\n        | where ObjectName == 'K8SContainer'\n        | where CounterName == 'memoryWorkingSetBytes'\n        | where InstanceName contains '$AKS'\n        | extend ContainerNameParts = split(InstanceName, '/')\n        | extend ContainerNamePartCount = array_length(ContainerNameParts)            \n        | extend PodUIDIndex = ContainerNamePartCount - 2, ContainerNameIndex = ContainerNamePartCount - 1 \n        | extend ContainerName = strcat(ContainerNameParts[PodUIDIndex], '/', ContainerNameParts[ContainerNameIndex])\n        | summarize arg_max(TimeGenerated, *) by ContainerName\n        | project TimeGenerated, ContainerName, MemoryUsage=CounterValue\n    ) on ContainerName\n) on ContainerName\n| summarize PercentUsed=avg(CpuUsage=MemoryUsage/MemoryLimit) by ServiceName\n| order by PercentUsed desc",
            "resource": "$Workspace",
            "resultFormat": "table"
          },
          "azureMonitor": {
            "aggOptions": [],
            "dimensionFilter": "*",
            "metricDefinition": "select",
            "metricName": "select",
            "metricNamespace": "select",
            "resourceGroup": "select",
            "resourceName": "select",
            "timeGrain": "auto",
            "timeGrains": [],
            "top": "10"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "PB92CA166444B34F5"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A",
          "subscription": "7b0bcc15-eef6-4181-b9fe-23bc213ce163"
        }
      ],
      "title": "Percentage Of Memory Limit",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "PB92CA166444B34F5"
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bits"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 360
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MemLimit"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 90
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MemUsage"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 95
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "ServiceName"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 157
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MemoryRequest"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 126
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MemoryLimit"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 107
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Replicas"
            },
            "properties": [
              {
                "id": "unit",
                "value": "none"
              },
              {
                "id": "custom.width",
                "value": 74
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 7,
        "x": 0,
        "y": 19
      },
      "id": 50,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "9.5.1",
      "targets": [
        {
          "appInsights": {
            "dimension": [
              "none"
            ],
            "metricName": "select",
            "rawQuery": false,
            "rawQueryString": "",
            "timeColumn": "timestamp",
            "timeGrain": "auto",
            "valueColumn": ""
          },
          "azureLogAnalytics": {
            "query": "KubePodInventory\n| where TimeGenerated > ago(2m)\n| where ClusterName == \"$AKS\"\n| where Namespace == \"$Namespace\"\n| summarize arg_max(TimeGenerated, *) by ContainerName\n| project Name, ContainerName, ServiceName\n| join kind = inner (\n    Perf\n    | where TimeGenerated > ago(2m)\n    | where ObjectName == 'K8SContainer'\n    | where CounterName == 'memoryLimitBytes'\n    | where InstanceName contains '$AKS'\n    | extend ContainerNameParts = split(InstanceName, '/')\n    | extend ContainerNamePartCount = array_length(ContainerNameParts)            \n    | extend PodUIDIndex = ContainerNamePartCount - 2, ContainerNameIndex = ContainerNamePartCount - 1 \n    | extend ContainerName = strcat(ContainerNameParts[PodUIDIndex], '/', ContainerNameParts[ContainerNameIndex])\n    | summarize arg_max(TimeGenerated, *) by ContainerName\n    | project ContainerName, MemoryLimit=CounterValue\n    | join kind = inner (\n        Perf\n        | where TimeGenerated > ago(2m)\n        | where ObjectName == 'K8SContainer'\n        | where CounterName == 'memoryRequestBytes'\n        | where InstanceName contains '$AKS'\n        | extend ContainerNameParts = split(InstanceName, '/')\n        | extend ContainerNamePartCount = array_length(ContainerNameParts)            \n        | extend PodUIDIndex = ContainerNamePartCount - 2, ContainerNameIndex = ContainerNamePartCount - 1 \n        | extend ContainerName = strcat(ContainerNameParts[PodUIDIndex], '/', ContainerNameParts[ContainerNameIndex])\n        | summarize arg_max(TimeGenerated, *) by ContainerName\n        | project TimeGenerated, ContainerName, MemoryRequest=CounterValue\n    ) on ContainerName\n) on ContainerName\n| order by Name asc\n| summarize Replicas=dcount(Name) by ServiceName, MemoryRequest=(MemoryRequest), MemoryLimit=(MemoryLimit)",
            "resource": "$Workspace",
            "resultFormat": "table"
          },
          "azureMonitor": {
            "aggOptions": [],
            "dimensionFilter": "*",
            "metricDefinition": "select",
            "metricName": "select",
            "metricNamespace": "select",
            "resourceGroup": "select",
            "resourceName": "select",
            "timeGrain": "auto",
            "timeGrains": [],
            "top": "10"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "PB92CA166444B34F5"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A",
          "subscription": "7b0bcc15-eef6-4181-b9fe-23bc213ce163"
        }
      ],
      "title": "Mem Info (Current)",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "PB92CA166444B34F5"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "always",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 2,
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bits"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 17,
        "x": 7,
        "y": 19
      },
      "id": 57,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "8.2.1",
      "targets": [
        {
          "appInsights": {
            "dimension": [
              "none"
            ],
            "metricName": "select",
            "rawQuery": false,
            "rawQueryString": "",
            "timeColumn": "timestamp",
            "timeGrain": "auto",
            "valueColumn": ""
          },
          "azureLogAnalytics": {
            "query": "KubePodInventory\n| where $__timeFilter(TimeGenerated)\n| where ClusterName == \"$AKS\"\n| where Namespace == \"$Namespace\"\n| summarize arg_max(TimeGenerated, *) by ContainerName\n| project Name, ContainerName, ServiceName\n| join kind = inner (\n    Perf\n    | where $__timeFilter(TimeGenerated)\n    | where ObjectName == 'K8SContainer'\n    | where CounterName == 'memoryWorkingSetBytes'    \n    | where InstanceName contains '$AKS'\n    | extend ContainerNameParts = split(InstanceName, '/')\n    | extend ContainerNamePartCount = array_length(ContainerNameParts)            \n    | extend PodUIDIndex = ContainerNamePartCount - 2, ContainerNameIndex = ContainerNamePartCount - 1 \n    | extend ContainerName = strcat(ContainerNameParts[PodUIDIndex], '/', ContainerNameParts[ContainerNameIndex])\n    | project TimeGenerated, ContainerName, CounterValue\n) on ContainerName\n| summarize MemoryWorkingSet=avg(CounterValue) by TimeGenerated=bin(TimeGenerated, $__interval), ServiceName\n| order by TimeGenerated asc",
            "resource": "$Workspace",
            "resultFormat": "time_series"
          },
          "azureMonitor": {
            "aggOptions": [],
            "dimensionFilter": "*",
            "metricDefinition": "select",
            "metricName": "select",
            "metricNamespace": "select",
            "resourceGroup": "select",
            "resourceName": "select",
            "timeGrain": "auto",
            "timeGrains": [],
            "top": "10"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "PB92CA166444B34F5"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A",
          "subscription": "7b0bcc15-eef6-4181-b9fe-23bc213ce163"
        }
      ],
      "title": "Avg Per Pod Memory (WorkingSet) ",
      "type": "timeseries"
    },
    {
      "collapsed": true,
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "PB92CA166444B34F5"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 29
      },
      "id": 67,
      "panels": [
        {
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "PB92CA166444B34F5"
          },
          "gridPos": {
            "h": 3,
            "w": 22,
            "x": 0,
            "y": 1
          },
          "id": 63,
          "options": {
            "content": "Shows an aggregated view of usage within a service to help with memory tuning\r\n\r\nChecking pod usage by specific pod instead of by service may be more useful in some circumstances and other dashboards exist for finding this",
            "mode": "markdown"
          },
          "pluginVersion": "8.2.1",
          "targets": [
            {
              "azureMonitor": {
                "timeGrain": "auto"
              },
              "datasource": {
                "type": "grafana-azure-monitor-datasource",
                "uid": "PB92CA166444B34F5"
              },
              "queryType": "Azure Monitor",
              "refId": "A",
              "subscription": "e878a98a-20ec-4516-a59d-f393429fe07c"
            }
          ],
          "title": "Notes",
          "type": "text"
        }
      ],
      "targets": [
        {
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "PB92CA166444B34F5"
          },
          "refId": "A"
        }
      ],
      "title": "Help",
      "type": "row"
    }
  ],
  "refresh": "",
  "schemaVersion": 38,
  "style": "dark",
  "tags": [
    "AKS",
    "MEMORY",
    "CPU",
    "USAGE"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "Products-Shared",
          "value": "d4746c7a-19cb-47ac-82b5-069b17cb99de"
        },
        "datasource": {
          "type": "grafana-azure-monitor-datasource",
          "uid": "PB92CA166444B34F5"
        },
        "definition": "subscriptions()",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "Subscription",
        "options": [],
        "query": "subscriptions()",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "prodplatformshared-aue-log",
          "value": "/subscriptions/d4746c7a-19cb-47ac-82b5-069b17cb99de/resourcegroups/prod-platformshared/providers/microsoft.operationalinsights/workspaces/prodplatformshared-aue-log"
        },
        "datasource": {
          "type": "grafana-azure-monitor-datasource",
          "uid": "PB92CA166444B34F5"
        },
        "definition": "workspaces($Subscription)",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "Workspace",
        "options": [],
        "query": "workspaces($Subscription)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": false,
          "text": "prod-platformapps-aue",
          "value": "prod-platformapps-aue"
        },
        "datasource": {
          "type": "grafana-azure-monitor-datasource",
          "uid": "PB92CA166444B34F5"
        },
        "definition": "ResourceGroups($Subscription)",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "ResourceGroups",
        "options": [],
        "query": "ResourceGroups($Subscription)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": false,
          "text": "prod-platformapps-aue-aks",
          "value": "prod-platformapps-aue-aks"
        },
        "datasource": {
          "type": "grafana-azure-monitor-datasource",
          "uid": "PB92CA166444B34F5"
        },
        "definition": "ResourceNames($Subscription, $ResourceGroups, Microsoft.ContainerService/managedClusters)",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "AKS",
        "options": [],
        "query": "ResourceNames($Subscription, $ResourceGroups, Microsoft.ContainerService/managedClusters)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": false,
          "text": "cluster-cert-manager",
          "value": "cluster-cert-manager"
        },
        "datasource": {
          "type": "grafana-azure-monitor-datasource",
          "uid": "PB92CA166444B34F5"
        },
        "definition": "workspace(\"$Workspace\").KubePodInventory | where ClusterName == \"$AKS\" | summarize by Namespace | project Namespace",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "Namespace",
        "options": [],
        "query": "workspace(\"$Workspace\").KubePodInventory | where ClusterName == \"$AKS\" | summarize by Namespace | project Namespace",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-24h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "",
  "title": "AKS Service Usage Explorer",
  "uid": "Agj7Edtnz",
  "version": 1,
  "weekStart": ""
}
