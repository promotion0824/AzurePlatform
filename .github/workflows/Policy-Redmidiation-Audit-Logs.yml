name: Policy Remediation Audit Logs

on:
  workflow_dispatch:
    inputs:
      nonMain:
        description: 'Push from non-main branch'
        required: false
        default: 'false'
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [main]
    paths:
      - 'scripts/Azure/Create-DiagnosticSetting.ps1'
  push:
    branches: [main]
    paths:
      - 'scripts/Azure/Create-DiagnosticSetting.ps1'

permissions:
  id-token: write
  contents: read

jobs:
  Preview:
    runs-on: ubuntu-latest
    environment: NonProd
    continue-on-error: true
    strategy:
      matrix:
        include:
          - managementSubscriptionName: dev
            managementGroupName: WillowTwinDev
          - managementSubscriptionName: prd
            managementGroupName: WillowTwinPrd
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: azure/login@v2
        with:
          client-id: ${{ vars.CLIENT_ID }}
          tenant-id: ${{ vars.TENANT_ID_WILLOWINC }}
          subscription-id: ${{ vars.SUBSCRIPTION_ID_K8S_INTERNAL }}

      - name: Preview Diagnostics settings creation ${{ matrix.managementGroupName }}
        shell: pwsh
        run: |
          ./Scripts/Azure/Create-DiagnosticSetting.ps1 -Verbose -WhatIf -managementSubscriptionName ${{ matrix.managementSubscriptionName }} -managementGroupName ${{ matrix.managementGroupName }}

      - name: Upload Chart
        if: ((github.event_name == 'push' || github.event_name == 'manual_dispatch') && github.ref == 'refs/heads/main') || github.event.inputs.nonMain != 'false'
        uses: actions/upload-artifact@v4
        with:
          name: Scripts
          path: Scripts/
          retention-days: 1

  Deploy:
    if: ((github.event_name == 'push' || github.event_name == 'manual_dispatch') && github.ref == 'refs/heads/main') || github.event.inputs.nonMain != 'false'
    runs-on: ubuntu-latest
    needs: Preview
    environment: Production
    continue-on-error: true
    strategy:
      matrix:
        include:
          - managementSubscriptionName: dev
            managementGroupName: WillowTwinDev
          - managementSubscriptionName: prd
            managementGroupName: WillowTwinPrd
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: Scripts
          path: Scripts/

      - uses: azure/login@v2
        with:
          client-id: ${{ vars.CLIENT_ID }}
          tenant-id: ${{ vars.TENANT_ID_WILLOWINC }}
          subscription-id: ${{ vars.SUBSCRIPTION_ID_K8S_INTERNAL }}

      - name: Diagnostics settings creation ${{ matrix.managementGroupName }}
        shell: pwsh
        run: |
          ./Scripts/Azure/Create-DiagnosticSetting.ps1 -Verbose -managementSubscriptionName ${{ matrix.managementSubscriptionName }} -managementGroupName ${{ matrix.managementGroupName }}
