name: OpensourcePortal-Build

on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [main]
    paths:
      - 'OpensourcePortal/**'
      - '!OpensourcePortal/docs/*'
      - '!OpensourcePortal/mkdocs.yml'
      - '!OpensourcePortal/backstage.yaml'
  push:
    branches: [main]
    paths:
      - 'OpensourcePortal/**'
      - '!OpensourcePortal/docs/*'
      - '!OpensourcePortal/mkdocs.yml'
      - '!OpensourcePortal/backstage.yaml'

env:
  acr_resource_group: nonprod-platformshared
  acr_name: nonprodplatformsharedcr
  image_name: opensource-portal
  dockerfile: OpensourcePortal/opensource-portal/Dockerfile
  context: OpensourcePortal/opensource-portal/
  submoduleBuiltLatest: False

jobs:
  OpensourcePortal-build:
    runs-on: ubuntu-latest
    outputs:
      latestCommit: ${{ steps.job-outputs.outputs.submoduleLatestCommit }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: WillowInc/AzurePlatform/.github/actions/docker-login-acr@main ## main
        with:
          client_id: ${{ vars.CLIENT_ID }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
          tenant_id: ${{ vars.TENANT_ID_WILLOWINC }}
          subscription_id: ${{ vars.SUBSCRIPTION_ID_K8S_INTERNAL }}
          acr_resource_group: ${{ env.acr_resource_group }}
          acr_name: ${{ env.acr_name }}

      - name: Check if Latest Submodule Built in ACR
        id: commit
        shell: pwsh
        run: |
          $status = git submodule status OpensourcePortal/opensource-portal/
          $status
          $match = Select-String "[-|\s](\w*)" -InputObject $status
          $submoduleLatestCommit = $match.matches.groups[1].Value
          "submoduleLatestCommit=$submoduleLatestCommit" >> $env:GITHUB_ENV
          Write-Host "Latest commit is $submoduleLatestCommit"
          if ($(az acr repository list -n ${{ env.acr_name }} -o tsv).Contains("opensource-portal")){
            $tags = az acr repository show-tags -n ${{ env.acr_name }} --repository opensource-portal --top 10 --orderby time_desc -o tsv
            write-host $tags
            if($tags -ne $null )
            {
              $submoduleBuiltLatest=$($tags.contains($submoduleLatestCommit))
              "submoduleBuiltLatest=$submoduleBuiltLatest" >> $ENV:GITHUB_ENV
            }
          }

      - name: Show Env
        run: |
          echo ${{ env.submoduleLatestCommit }}
          echo ${{ env.submoduleBuiltLatest }}

      - name: checkout submodule(s)
        if: ${{ env.submoduleBuiltLatest == 'False' }}
        run: |
          git submodule update --init --remote OpensourcePortal/opensource-portal/

      - uses: WillowInc/AzurePlatform/.github/actions/docker-build-push-acr@main ## main
        if: ${{ env.submoduleBuiltLatest == 'False' }}
        id: docker-build-push
        with:
          client_id: ${{ vars.CLIENT_ID }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
          tenant_id: ${{ vars.TENANT_ID_WILLOWINC }}
          subscription_id: ${{ vars.SUBSCRIPTION_ID_K8S_INTERNAL }}
          acr_resource_group: ${{ env.acr_resource_group }}
          acr_name: ${{ env.acr_name }}
          image_name: ${{ env.image_name }}
          tags: ${{ env.submoduleLatestCommit }}
          dockerfile: ${{ env.dockerfile }}
          context: ${{ env.context }}

      - name: Upload Charts
        uses: actions/upload-artifact@v4
        with:
          name: OpensourcePortal-chart
          path: OpensourcePortal/chart/
          retention-days: 1

      - name: Set Outputs
        id: job-outputs
        run: echo "submoduleLatestCommit=${{ env.submoduleLatestCommit }}" >> $GITHUB_OUTPUT

  Deploy-dev:
    runs-on: ubuntu-latest
    environment: Dev-Internal-DevServices-AKS
    needs: OpensourcePortal-build

    steps:
      - name: Download chart
        uses: actions/download-artifact@v4
        with:
          name: OpensourcePortal-chart
          path: chart/

      - uses: azure/setup-helm@v4
        with:
          version: 'latest'
          token: ${{ secrets.GITHUB_TOKEN }}
        id: install

      - uses: WillowInc/AzurePlatform/.github/actions/aks-login@main
        with:
          client_id: ${{ vars.CLIENT_ID }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
          tenant_id: ${{ vars.TENANT_ID_WILLOWINC }}
          subscription_id: ${{ vars.SUBSCRIPTION_ID }}
          cluster_resource_group: ${{ vars.CLUSTER_RESOURCE_GROUP }}
          cluster_name: ${{ vars.CLUSTER_NAME }}

      - name: Deploy opensource-dev
        shell: bash
        run: |
          helm upgrade --install opensource-portal-dev --namespace opensource-portal-dev --create-namespace chart -f chart/values-dev.yaml --set image.tag=${{ needs.OpensourcePortal-build.outputs.latestCommit }}

  Deploy-prod:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: Internal-DevServices-AKS
    needs: [Deploy-dev, OpensourcePortal-build]

    steps:
      - name: Download chart
        uses: actions/download-artifact@v4
        with:
          name: OpensourcePortal-chart
          path: chart/

      - uses: azure/setup-helm@v4
        with:
          version: 'latest'
          token: ${{ secrets.GITHUB_TOKEN }}
        id: install

      - uses: WillowInc/AzurePlatform/.github/actions/aks-login@main
        with:
          client_id: ${{ vars.CLIENT_ID }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
          tenant_id: ${{ vars.TENANT_ID_WILLOWINC }}
          subscription_id: ${{ vars.SUBSCRIPTION_ID }}
          cluster_resource_group: ${{ vars.CLUSTER_RESOURCE_GROUP }}
          cluster_name: ${{ vars.CLUSTER_NAME }}

      - name: Deploy opensource-prod
        shell: bash
        run: |
          helm upgrade --install opensource-portal --namespace opensource-portal --create-namespace chart -f chart/values-internal.yaml --set image.tag=${{ needs.OpensourcePortal-build.outputs.latestCommit }}
